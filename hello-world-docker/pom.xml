<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.9.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.fse</groupId>
	<artifactId>hello-world-docker</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>hello-world-docker</name>
	<description>hello-world-docker</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Greenwich.SR2</spring-cloud.version>
		<profile.no-liquibase />
		<profile.swagger />
	</properties>

	<dependencies>
	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
	</dependencies>
	
	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warSourceDirectory>src/main/webapp/</warSourceDirectory>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>WEB-INF/**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>DEBUG</logback.loglevel>
				<!-- default Spring profiles -->
				<spring.profiles.active>dev${profile.no-liquibase}</spring.profiles.active>
				<activatedProperties>dev</activatedProperties>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<configuration>
							<filesets>
								<fileset>
									<directory>target/</directory>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warSourceDirectory>src/main/webapp/</warSourceDirectory>
							<webResources>
								<resource>
									<directory>src/main/webapp</directory>
									<includes>
										<include>WEB-INF/**</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<executable>true</executable>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>build-info</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>INFO</logback.loglevel>
				<!-- default Spring profiles -->
				<spring.profiles.active>prod${profile.swagger}${profile.no-liquibase}</spring.profiles.active>
				<activatedProperties>prod</activatedProperties>
			</properties>
		</profile>
		<profile>
			<!-- Profile for doing "continuous compilation" with the Scala Maven plugin. 
				It allows automatic compilation of Java classes as soon as they are saved. 
				To use it, run in 3 terminals: - './mvnw -Pcc scala:cc' for continuous compilation 
				of your classes - './mvnw -Pcc' for hot reload of Spring boot - 'gulp' for 
				hot reload of the HTML/JavaScript assets Everything should hot reload automatically! -->
			<id>cc</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warSourceDirectory>src/main/webapp/</warSourceDirectory>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<executable>true</executable>
							<fork>true</fork>
							<addResources>true</addResources>
							<!-- Enable the line below to have remote debugging of your application 
								on port 5005 <jvmArguments>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments> -->
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<executions>
							<execution>
								<id>default-compile</id>
								<phase>none</phase>
							</execution>
							<execution>
								<id>default-testCompile</id>
								<phase>none</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>net.alchim31.maven</groupId>
						<artifactId>scala-maven-plugin</artifactId>
						<version>${scala-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>compile</id>
								<phase>compile</phase>
								<goals>
									<goal>add-source</goal>
									<goal>compile</goal>
								</goals>
							</execution>
							<execution>
								<id>test-compile</id>
								<phase>test-compile</phase>
								<goals>
									<goal>add-source</goal>
									<goal>testCompile</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<recompileMode>incremental</recompileMode>
							<verbose>true</verbose>
							<scalaVersion>${scala.version}</scalaVersion>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- log configuration -->
				<logback.loglevel>DEBUG</logback.loglevel>
				<!-- default Spring profiles -->
				<spring.profiles.active>dev,swagger</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<build>
		<finalName>hello-world-docker</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
			</plugin>
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jarsigner-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>sign</id>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<keystore>/src/test/resources/hrapp.jks</keystore>
					<alias>selfsigned</alias>
					<storepass>hrapp#123</storepass>
					<keypass>hrapp#123</keypass>
				</configuration>
			</plugin> -->
		</plugins>
		<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
	</build>

</project>
